from _typeshed import Incomplete
from modal._location import display_location as display_location, parse_cloud_provider as parse_cloud_provider
from modal._output import step_completed as step_completed, step_progress as step_progress
from modal.client import AioClient as AioClient
from modal.shared_volume import AioSharedVolume as AioSharedVolume, AioSharedVolumeHandle as AioSharedVolumeHandle, _SharedVolumeHandle

FileType: Incomplete
volume_cli: Incomplete

async def list() -> None: ...
def gen_usage_code(label): ...
def create(name: str, cloud: str = ...): ...
async def volume_from_name(deployment_name) -> _SharedVolumeHandle: ...
async def ls(volume_name: str, path: str = ...): ...

PIPE_PATH: Incomplete

async def put(volume_name: str, local_path: str, remote_path: str = ...): ...

class CliError(Exception):
    message: Incomplete
    def __init__(self, message) -> None: ...

async def get(volume_name: str, remote_path: str, local_destination: str = ..., force: bool = ...): ...
async def rm(volume_name: str, remote_path: str, recursive: bool = ...): ...
