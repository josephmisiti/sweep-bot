import modal
from modal.functions import _Function, _FunctionHandle
from modal.stub import AioStub as AioStub, LocalEntrypoint as LocalEntrypoint, Stub as Stub, _Stub
from rich.console import Console
from rich.panel import Panel
from typing import Any, Optional, Union

class ImportRef:
    file_or_module: str
    object_path: Optional[str]
    def __init__(self, file_or_module, object_path) -> None: ...

def parse_import_ref(object_ref: str) -> ImportRef: ...

class NoSuchObject(modal.exception.NotFoundError): ...

DEFAULT_STUB_NAME: str

def import_file_or_module(file_or_module: str): ...
def get_by_object_path(obj: Any, obj_path: str): ...
def make_function_panel(idx: int, tag: str, function: _Function, stub: _Stub) -> Panel: ...
def choose_function_interactive(stub: _Stub, console: Console) -> str: ...
def infer_function_or_help(_stub: _Stub, interactive: bool, accept_local_entrypoint: bool) -> Union[_FunctionHandle, LocalEntrypoint]: ...
def import_stub(stub_ref: str) -> _Stub: ...
def import_function(func_ref: str, base_cmd: str, accept_local_entrypoint: bool = ..., interactive: bool = ...) -> Union[_FunctionHandle, LocalEntrypoint]: ...
